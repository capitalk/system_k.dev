// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: capk_globals.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "capk_globals.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace capkproto {

namespace {

const ::google::protobuf::EnumDescriptor* side_t_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ord_type_t_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* time_in_force_t_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_capk_5fglobals_2eproto() {
  protobuf_AddDesc_capk_5fglobals_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "capk_globals.proto");
  GOOGLE_CHECK(file != NULL);
  side_t_descriptor_ = file->enum_type(0);
  ord_type_t_descriptor_ = file->enum_type(1);
  time_in_force_t_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_capk_5fglobals_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_capk_5fglobals_2eproto() {
}

void protobuf_AddDesc_capk_5fglobals_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022capk_globals.proto\022\tcapkproto*\032\n\006side_"
    "t\022\007\n\003BID\020\001\022\007\n\003ASK\020\002*\036\n\nord_type_t\022\007\n\003MKT"
    "\020\001\022\007\n\003LIM\020\002*P\n\017time_in_force_t\022\007\n\003GFD\020\000\022"
    "\007\n\003GTC\020\001\022\007\n\003OPG\020\002\022\007\n\003IOC\020\003\022\007\n\003FOK\020\004\022\007\n\003G"
    "TX\020\005\022\007\n\003GTD\020\006", 173);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "capk_globals.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_capk_5fglobals_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_capk_5fglobals_2eproto {
  StaticDescriptorInitializer_capk_5fglobals_2eproto() {
    protobuf_AddDesc_capk_5fglobals_2eproto();
  }
} static_descriptor_initializer_capk_5fglobals_2eproto_;
const ::google::protobuf::EnumDescriptor* side_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return side_t_descriptor_;
}
bool side_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ord_type_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ord_type_t_descriptor_;
}
bool ord_type_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* time_in_force_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return time_in_force_t_descriptor_;
}
bool time_in_force_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace capkproto

// @@protoc_insertion_point(global_scope)
